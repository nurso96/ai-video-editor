{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/nick/ai-video-editor/frontend/src/components/ChatDrawer.tsx"],"sourcesContent":["import { FormEvent, useEffect, useMemo, useState } from \"react\";\n\nimport type { ModelSettings } from \"./ModelSelect\";\n\ntype ChatMessage = {\n  id: number;\n  role: \"user\" | \"assistant\" | string;\n  content: string;\n  created_at: string;\n};\n\ntype ChatSession = {\n  id: number;\n  title: string;\n  backend: string;\n  created_at: string;\n  updated_at: string;\n  messages: ChatMessage[];\n};\n\ntype ChatDrawerProps = {\n  open: boolean;\n  apiBase: string;\n  onClose: () => void;\n  modelSettings?: ModelSettings;\n  onInsertCaption?: (text: string) => void;\n};\n\nconst QUICK_PROMPTS: Record<string, string> = {\n  punchline: \"Suggest a punchline for the climax beat of this meme video\",\n  hook: \"Write a hook caption that grabs attention in the first 2 seconds\",\n};\n\nexport function ChatDrawer({ open, apiBase, onClose, modelSettings, onInsertCaption }: ChatDrawerProps) {\n  const [sessions, setSessions] = useState<ChatSession[]>([]);\n  const [activeSessionId, setActiveSessionId] = useState<number | null>(null);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const activeSession = useMemo(() => sessions.find((session) => session.id === activeSessionId) ?? null, [sessions, activeSessionId]);\n\n  useEffect(() => {\n    if (!open) {\n      return;\n    }\n    void refreshSessions();\n  }, [open]);\n\n  const refreshSessions = async () => {\n    try {\n      const response = await fetch(`${apiBase}/chat/sessions`);\n      if (!response.ok) {\n        throw new Error(await response.text());\n      }\n      const payload = await response.json();\n      setSessions(payload.sessions || []);\n      if (!activeSessionId && payload.sessions?.length) {\n        setActiveSessionId(payload.sessions[0].id);\n      }\n    } catch (fetchError) {\n      setError((fetchError as Error).message);\n    }\n  };\n\n  const createSession = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${apiBase}/chat/sessions`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          backend: modelSettings?.chatBackend ?? \"stub\",\n          hf_model: modelSettings?.hfModel,\n          title: \"Editing Ideas\",\n        }),\n      });\n      if (!response.ok) {\n        throw new Error(await response.text());\n      }\n      const payload = await response.json();\n      setSessions((prev) => [payload, ...prev]);\n      setActiveSessionId(payload.id);\n    } catch (creationError) {\n      setError((creationError as Error).message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const sendMessage = async (message: string) => {\n    if (!activeSessionId || !message.trim()) {\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`${apiBase}/chat/sessions/${activeSessionId}/messages`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message }),\n      });\n      if (!response.ok) {\n        throw new Error(await response.text());\n      }\n      const payload = await response.json();\n      setSessions((prev) => [payload.session, ...prev.filter((session) => session.id !== payload.session.id)]);\n      setActiveSessionId(payload.session.id);\n      setInput(\"\");\n    } catch (sendError) {\n      setError((sendError as Error).message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    await sendMessage(input);\n  };\n\n  const handleQuickPrompt = async (promptKey: string) => {\n    const prompt = QUICK_PROMPTS[promptKey];\n    if (!prompt) {\n      return;\n    }\n    await sendMessage(prompt);\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <aside className=\"fixed inset-y-0 left-0 w-full sm:w-[420px] bg-slate-950 border-r border-slate-800 shadow-xl flex flex-col z-40\">\n      <header className=\"px-6 py-4 flex items-center justify-between border-b border-slate-800\">\n        <div>\n          <h2 className=\"text-lg font-semibold text-slate-100\">Chat Assistant</h2>\n          <p className=\"text-xs text-slate-500\">Backend: {modelSettings?.chatBackend ?? \"stub\"}</p>\n        </div>\n        <button className=\"text-slate-400 hover:text-slate-200\" onClick={onClose}>\n          ✕\n        </button>\n      </header>\n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"px-4 py-3 border-b border-slate-800 flex items-center gap-2 overflow-x-auto\">\n          <button className=\"px-3 py-1 border border-emerald-400 text-emerald-300 rounded text-sm\" onClick={createSession} disabled={loading}>\n            New Session\n          </button>\n          {sessions.map((session) => (\n            <button\n              key={session.id}\n              className={`px-3 py-1 rounded text-sm border ${session.id === activeSessionId ? \"border-emerald-400 text-emerald-300\" : \"border-slate-700 text-slate-300\"}`}\n              onClick={() => setActiveSessionId(session.id)}\n            >\n              {session.title}\n            </button>\n          ))}\n        </div>\n        {activeSession ? (\n          <div className=\"px-4 py-4 space-y-3\">\n            {activeSession.messages.map((message) => (\n              <div key={message.id} className={`p-3 rounded border ${message.role === \"assistant\" ? \"border-emerald-500/40 bg-emerald-500/10\" : \"border-slate-700\"}`}>\n                <div className=\"text-xs text-slate-400 mb-1 capitalize\">{message.role}</div>\n                <p className=\"text-sm whitespace-pre-wrap\">{message.content}</p>\n                {message.role === \"assistant\" && (\n                  <button\n                    className=\"mt-2 text-xs text-emerald-300 underline\"\n                    onClick={() => onInsertCaption?.(message.content)}\n                  >\n                    Insert as caption\n                  </button>\n                )}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"px-4 py-6 text-sm text-slate-400\">No session selected.</div>\n        )}\n      </div>\n      <footer className=\"border-t border-slate-800 p-4 space-y-3\">\n        {error && <p className=\"text-xs text-red-400 bg-red-900/30 border border-red-900 rounded px-3 py-2\">{error}</p>}\n        <div className=\"flex gap-2\">\n          <button className=\"flex-1 px-3 py-2 border border-slate-700 rounded text-xs text-slate-300\" onClick={() => handleQuickPrompt(\"hook\")}>\n            Write hook\n          </button>\n          <button className=\"flex-1 px-3 py-2 border border-slate-700 rounded text-xs text-slate-300\" onClick={() => handleQuickPrompt(\"punchline\")}>\n            Suggest punchline\n          </button>\n        </div>\n        <form onSubmit={handleSubmit} className=\"flex gap-2\">\n          <textarea\n            className=\"flex-1 bg-slate-900 border border-slate-700 rounded px-3 py-2 text-slate-100 h-16\"\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n            placeholder=\"Ask about comedic timing, captions, etc.\"\n          />\n          <button className=\"px-4 py-2 bg-emerald-500 text-black font-semibold rounded self-end disabled:opacity-50\" disabled={loading || !activeSessionId}>\n            Send\n          </button>\n        </form>\n      </footer>\n    </aside>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///home/nick/ai-video-editor/frontend/src/components/SettingsModal.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport type { ConsentStatus } from \"../types\";\n\ntype SettingsModalProps = {\n  open: boolean;\n  watermarkEnabled: boolean;\n  onWatermarkChange?: (value: boolean) => void;\n  consent?: ConsentStatus | null;\n  redisHealthy?: boolean;\n  onClose: () => void;\n};\n\nexport function SettingsModal({ open, watermarkEnabled, onWatermarkChange, consent, redisHealthy, onClose }: SettingsModalProps) {\n  const [localWatermark, setLocalWatermark] = useState(watermarkEnabled);\n\n  useEffect(() => {\n    setLocalWatermark(watermarkEnabled);\n  }, [watermarkEnabled, open]);\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black/60 flex items-center justify-center z-50\">\n      <div className=\"w-full max-w-lg bg-slate-950 border border-slate-800 rounded-lg shadow-xl p-6 space-y-4 text-slate-100\">\n        <header className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold\">Settings</h2>\n          <button className=\"text-slate-400 hover:text-slate-200\" onClick={onClose}>\n            ✕\n          </button>\n        </header>\n\n        <section className=\"space-y-2\">\n          <h3 className=\"text-sm font-semibold text-slate-300\">Watermark</h3>\n          <p className=\"text-xs text-slate-400\">\n            Toggles whether renders include the ffmpeg drawtext watermark. Applies to future render jobs.\n          </p>\n          <label className=\"flex items-center gap-3 text-sm\">\n            <input\n              type=\"checkbox\"\n              checked={localWatermark}\n              onChange={(event) => {\n                const value = event.target.checked;\n                setLocalWatermark(value);\n                onWatermarkChange?.(value);\n              }}\n            />\n            Watermark enabled\n          </label>\n        </section>\n\n        <section className=\"space-y-2\">\n          <h3 className=\"text-sm font-semibold text-slate-300\">Consent</h3>\n          {consent?.has_checkbox ? (\n            <p className=\"text-xs text-emerald-300\">✅ Consent checkbox acknowledged</p>\n          ) : (\n            <p className=\"text-xs text-yellow-300\">⚠️ Consent not yet confirmed</p>\n          )}\n          {consent?.document_url ? (\n            <a className=\"text-xs text-emerald-400 underline\" href={consent.document_url} target=\"_blank\" rel=\"noreferrer\">\n              View consent document\n            </a>\n          ) : (\n            <p className=\"text-xs text-slate-500\">Upload a consent document to unblock rendering.</p>\n          )}\n        </section>\n\n        <section className=\"space-y-1\">\n          <h3 className=\"text-sm font-semibold text-slate-300\">System</h3>\n          <p className=\"text-xs text-slate-400\">Redis: {redisHealthy ? \"✅ reachable\" : \"⚠️ offline\"}</p>\n        </section>\n\n        <footer className=\"flex justify-end\">\n          <button className=\"px-4 py-2 bg-emerald-500 text-black font-semibold rounded\" onClick={onClose}>\n            Close\n          </button>\n        </footer>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AAYO,SAAS,cAAc,EAAE,IAAI,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAsB;IAC7H,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,+GAAQ,EAAC;IAErD,IAAA,gHAAS,EAAC;QACR,kBAAkB;IACpB,GAAG;QAAC;QAAkB;KAAK;IAE3B,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAO,WAAU;;sCAChB,qKAAC;4BAAG,WAAU;sCAAwB;;;;;;sCACtC,qKAAC;4BAAO,WAAU;4BAAsC,SAAS;sCAAS;;;;;;;;;;;;8BAK5E,qKAAC;oBAAQ,WAAU;;sCACjB,qKAAC;4BAAG,WAAU;sCAAuC;;;;;;sCACrD,qKAAC;4BAAE,WAAU;sCAAyB;;;;;;sCAGtC,qKAAC;4BAAM,WAAU;;8CACf,qKAAC;oCACC,MAAK;oCACL,SAAS;oCACT,UAAU,CAAC;wCACT,MAAM,QAAQ,MAAM,MAAM,CAAC,OAAO;wCAClC,kBAAkB;wCAClB,oBAAoB;oCACtB;;;;;;gCACA;;;;;;;;;;;;;8BAKN,qKAAC;oBAAQ,WAAU;;sCACjB,qKAAC;4BAAG,WAAU;sCAAuC;;;;;;wBACpD,SAAS,6BACR,qKAAC;4BAAE,WAAU;sCAA2B;;;;;iDAExC,qKAAC;4BAAE,WAAU;sCAA0B;;;;;;wBAExC,SAAS,6BACR,qKAAC;4BAAE,WAAU;4BAAqC,MAAM,QAAQ,YAAY;4BAAE,QAAO;4BAAS,KAAI;sCAAa;;;;;iDAI/G,qKAAC;4BAAE,WAAU;sCAAyB;;;;;;;;;;;;8BAI1C,qKAAC;oBAAQ,WAAU;;sCACjB,qKAAC;4BAAG,WAAU;sCAAuC;;;;;;sCACrD,qKAAC;4BAAE,WAAU;;gCAAyB;gCAAQ,eAAe,gBAAgB;;;;;;;;;;;;;8BAG/E,qKAAC;oBAAO,WAAU;8BAChB,cAAA,qKAAC;wBAAO,WAAU;wBAA4D,SAAS;kCAAS;;;;;;;;;;;;;;;;;;;;;;AAO1G","debugId":null}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":["file:///home/nick/ai-video-editor/frontend/src/components/ToolsPanel.tsx"],"sourcesContent":["import { Fragment, useMemo, useState } from \"react\";\n\nimport type { ModelSettings } from \"./ModelSelect\";\n\ntype ToolResult = Record<string, unknown> | null;\n\ntype ToolsPanelProps = {\n  open: boolean;\n  apiBase: string;\n  assetPath?: string | null;\n  onClose: () => void;\n  onApply?: (tool: string, result: ToolResult) => void;\n  modelSettings?: ModelSettings;\n};\n\nconst TOOL_ORDER = [\"transcribe\", \"beats\", \"thumbnail\", \"caption_srt\", \"suggest_effects\"] as const;\ntype ToolName = (typeof TOOL_ORDER)[number];\n\nexport function ToolsPanel({ open, apiBase, assetPath, onClose, onApply, modelSettings }: ToolsPanelProps) {\n  const [activeTool, setActiveTool] = useState<ToolName>(\"transcribe\");\n  const [thumbnailTime, setThumbnailTime] = useState(0);\n  const [transcriptText, setTranscriptText] = useState(\"\");\n  const [toolResult, setToolResult] = useState<ToolResult>(null);\n  const [busy, setBusy] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const assetHint = useMemo(() => assetPath ?? \"\", [assetPath]);\n\n  const runTool = async () => {\n    if (!assetHint && activeTool !== \"caption_srt\" && activeTool !== \"suggest_effects\") {\n      setError(\"No asset path available. Upload a clip first.\");\n      return;\n    }\n    setError(null);\n    setBusy(true);\n    try {\n      const body: Record<string, unknown> = { tool: activeTool, args: {} };\n      const args: Record<string, unknown> = body.args as Record<string, unknown>;\n      if (activeTool !== \"caption_srt\" && activeTool !== \"suggest_effects\") {\n        args.path = assetHint;\n      }\n      if (activeTool === \"transcribe\" && modelSettings) {\n        args.model = modelSettings.whisperModel;\n      }\n      if (activeTool === \"thumbnail\") {\n        args.time = thumbnailTime;\n      }\n      if (activeTool === \"caption_srt\") {\n        try {\n          args.segments = JSON.parse(transcriptText || \"[]\");\n        } catch (parseError) {\n          setBusy(false);\n          setError(\"Provide caption segments JSON (array of {start,end,text}).\");\n          return;\n        }\n      }\n      if (activeTool === \"suggest_effects\") {\n        if (!transcriptText) {\n          setBusy(false);\n          setError(\"Paste the transcript text to get suggestions.\");\n          return;\n        }\n        args.transcript = transcriptText;\n        args.beats = [];\n        if (modelSettings?.chatBackend === \"hf\") {\n          args.backend = \"hf\";\n          args.hf_model = modelSettings?.hfModel;\n        }\n      }\n\n      const response = await fetch(`${apiBase}/tools`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      if (!response.ok) {\n        throw new Error(await response.text());\n      }\n      const payload = await response.json();\n      setToolResult(payload.result ?? null);\n    } catch (runError) {\n      setError((runError as Error).message);\n    } finally {\n      setBusy(false);\n    }\n  };\n\n  const applyResult = () => {\n    if (!toolResult) {\n      return;\n    }\n    onApply?.(activeTool, toolResult);\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <aside className=\"fixed inset-y-0 right-0 w-full sm:w-[420px] bg-slate-950 border-l border-slate-800 shadow-xl flex flex-col z-40\">\n      <header className=\"px-6 py-4 flex items-center justify-between border-b border-slate-800\">\n        <h2 className=\"text-lg font-semibold text-slate-100\">AI Tools</h2>\n        <button className=\"text-slate-400 hover:text-slate-200\" onClick={onClose}>\n          ✕\n        </button>\n      </header>\n      <div className=\"flex-1 overflow-y-auto px-6 py-4 space-y-4 text-slate-200\">\n        <div>\n          <p className=\"text-sm text-slate-400 mb-2\">Choose a tool:</p>\n          <div className=\"flex flex-wrap gap-2\">\n            {TOOL_ORDER.map((tool) => (\n              <button\n                key={tool}\n                className={`px-3 py-1 rounded border text-sm transition ${activeTool === tool ? \"border-emerald-400 text-emerald-300\" : \"border-slate-700 text-slate-300\"}`}\n                onClick={() => setActiveTool(tool)}\n              >\n                {tool}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {assetHint && (\n          <div className=\"text-xs text-slate-500\">Asset: {assetHint}</div>\n        )}\n\n        {activeTool === \"thumbnail\" && (\n          <label className=\"flex flex-col text-sm text-slate-300\">\n            Timestamp (seconds)\n            <input\n              type=\"number\"\n              step=\"0.1\"\n              min={0}\n              className=\"mt-1 bg-slate-900 border border-slate-700 rounded px-3 py-2 text-slate-100\"\n              value={thumbnailTime}\n              onChange={(event) => setThumbnailTime(Number(event.target.value))}\n            />\n          </label>\n        )}\n\n        {(activeTool === \"caption_srt\" || activeTool === \"suggest_effects\") && (\n          <label className=\"flex flex-col text-sm text-slate-300\">\n            {activeTool === \"caption_srt\" ? \"Caption segments JSON\" : \"Transcript text\"}\n            <textarea\n              className=\"mt-1 bg-slate-900 border border-slate-700 rounded px-3 py-2 text-slate-100 h-32\"\n              value={transcriptText}\n              onChange={(event) => setTranscriptText(event.target.value)}\n              placeholder={activeTool === \"caption_srt\" ? '[{\"start\":0,\"end\":1.2,\"text\":\"Hello\"}]' : \"Paste transcript\"}\n            />\n          </label>\n        )}\n\n        {error && <p className=\"text-sm text-red-400 bg-red-900/30 border border-red-900 rounded px-3 py-2\">{error}</p>}\n\n        <div className=\"flex items-center gap-3\">\n          <button\n            className=\"px-4 py-2 bg-emerald-500 text-black font-semibold rounded disabled:opacity-50\"\n            onClick={runTool}\n            disabled={busy}\n          >\n            {busy ? \"Running…\" : \"Run Tool\"}\n          </button>\n          {toolResult && (\n            <button className=\"px-4 py-2 border border-emerald-400 text-emerald-300 rounded\" onClick={applyResult}>\n              Apply to Timeline\n            </button>\n          )}\n        </div>\n\n        {toolResult && (\n          <div>\n            <p className=\"text-sm text-slate-400 mb-2\">Result</p>\n            <pre className=\"bg-slate-900 border border-slate-800 rounded p-3 text-xs overflow-x-auto\">\n              {JSON.stringify(toolResult, null, 2)}\n            </pre>\n          </div>\n        )}\n      </div>\n    </aside>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 863, "column": 0}, "map": {"version":3,"sources":["file:///home/nick/ai-video-editor/frontend/src/components/Editor/VideoPreview.tsx"],"sourcesContent":["import React, { memo, useEffect, useRef } from \"react\";\n\ntype Props = {\n  videoSrc: string | null | undefined;\n};\n\nconst VideoPreview: React.FC<Props> = ({ videoSrc }) => {\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  useEffect(() => {\n    if (videoRef.current && videoSrc) {\n      try {\n        videoRef.current.preload = \"metadata\";\n      } catch {\n        /* noop */\n      }\n    }\n  }, [videoSrc]);\n\n  if (!videoSrc) {\n    return (\n      <div className=\"h-64 flex items-center justify-center text-slate-500\">\n        Upload a clip to preview the timeline.\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <video\n        ref={videoRef}\n        controls\n        className=\"w-full rounded\"\n        src={videoSrc}\n        data-testid=\"video-preview\"\n      />\n    </div>\n  );\n};\n\nexport default memo(VideoPreview);"],"names":[],"mappings":";;;;;AAAA;;;AAMA,MAAM,eAAgC,CAAC,EAAE,QAAQ,EAAE;IACjD,MAAM,WAAW,IAAA,6GAAM,EAA0B;IAEjD,IAAA,gHAAS,EAAC;QACR,IAAI,SAAS,OAAO,IAAI,UAAU;YAChC,IAAI;gBACF,SAAS,OAAO,CAAC,OAAO,GAAG;YAC7B,EAAE,OAAM;YACN,QAAQ,GACV;QACF;IACF,GAAG;QAAC;KAAS;IAEb,IAAI,CAAC,UAAU;QACb,qBACE,qKAAC;YAAI,WAAU;sBAAuD;;;;;;IAI1E;IAEA,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YACC,KAAK;YACL,QAAQ;YACR,WAAU;YACV,KAAK;YACL,eAAY;;;;;;;;;;;AAIpB;qDAEe,IAAA,2GAAI,EAAC","debugId":null}},
    {"offset": {"line": 917, "column": 0}, "map": {"version":3,"sources":["file:///home/nick/ai-video-editor/frontend/src/components/Editor/Timeline.tsx"],"sourcesContent":["import React from \"react\";\nimport type { TimelineSegment } from \"../../types\";\n\ntype Props = {\n  segments: TimelineSegment[];\n  selectedIndex: number;\n  onSelect: (i: number) => void;\n};\n\nexport default function Timeline({ segments, selectedIndex, onSelect }: Props) {\n  return (\n    <div className=\"bg-slate-900 border border-slate-800 rounded p-2\">\n      <h4 className=\"text-sm text-slate-300 mb-2\">Timeline</h4>\n      <ul className=\"space-y-2 max-h-48 overflow-auto\">\n        {segments.map((s, i) => (\n          <li key={`${s.name}-${i}`}>\n            <button\n              className={`w-full text-left px-3 py-2 rounded border transition ${\n                selectedIndex === i ? \"border-emerald-400 bg-emerald-400/10\" : \"border-slate-800 hover:border-slate-600\"\n              }`}\n              onClick={() => onSelect(i)}\n            >\n              <div className=\"flex justify-between\">\n                <div className=\"text-sm font-medium\">{s.name}</div>\n                <div className=\"text-xs text-slate-400\">{s.start.toFixed(2)}–{s.end.toFixed(2)}s</div>\n              </div>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;AASe,SAAS,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAS;IAC3E,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAA8B;;;;;;0BAC5C,qKAAC;gBAAG,WAAU;0BACX,SAAS,GAAG,CAAC,CAAC,GAAG,kBAChB,qKAAC;kCACC,cAAA,qKAAC;4BACC,WAAW,CAAC,qDAAqD,EAC/D,kBAAkB,IAAI,yCAAyC,2CAC/D;4BACF,SAAS,IAAM,SAAS;sCAExB,cAAA,qKAAC;gCAAI,WAAU;;kDACb,qKAAC;wCAAI,WAAU;kDAAuB,EAAE,IAAI;;;;;;kDAC5C,qKAAC;wCAAI,WAAU;;4CAA0B,EAAE,KAAK,CAAC,OAAO,CAAC;4CAAG;4CAAE,EAAE,GAAG,CAAC,OAAO,CAAC;4CAAG;;;;;;;;;;;;;;;;;;uBAT5E,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG;;;;;;;;;;;;;;;;AAiBnC","debugId":null}},
    {"offset": {"line": 997, "column": 0}, "map": {"version":3,"sources":["file:///home/nick/ai-video-editor/frontend/src/components/Editor/EffectsPanel.tsx"],"sourcesContent":["import React from \"react\";\n\ntype Props = {\n  effects: string[];\n  onChange?: (v: string) => void;\n};\n\nexport default function EffectsPanel({ effects = [], onChange }: Props) {\n  return (\n    <div className=\"bg-slate-900 border border-slate-800 rounded p-3\">\n      <h4 className=\"text-sm text-slate-300 mb-2\">Effects</h4>\n      <textarea\n        className=\"w-full h-28 bg-transparent border border-slate-800 rounded p-2 text-slate-200\"\n        value={effects.join(\", \")}\n        onChange={(e) => onChange?.(e.target.value)}\n        placeholder=\"comma-separated effects\"\n      />\n      <p className=\"text-xs text-slate-500 mt-2\">Example: brightness(1.1), crop(0,0,1080,1920), caption(style)</p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAOe,SAAS,aAAa,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAS;IACpE,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAA8B;;;;;;0BAC5C,qKAAC;gBACC,WAAU;gBACV,OAAO,QAAQ,IAAI,CAAC;gBACpB,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;gBAC1C,aAAY;;;;;;0BAEd,qKAAC;gBAAE,WAAU;0BAA8B;;;;;;;;;;;;AAGjD","debugId":null}},
    {"offset": {"line": 1056, "column": 0}, "map": {"version":3,"sources":["file:///home/nick/ai-video-editor/frontend/src/lib/api.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE = process.env.NEXT_PUBLIC_API_BASE ?? \"http://localhost:8000/api\";\n\nexport const client = axios.create({\n  baseURL: API_BASE,\n  timeout: 30_000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport async function loadProject(projectId: number) {\n  return client.get(`/timeline/${projectId}`).then((r) => r.data);\n}\n\nexport async function saveTimeline(projectId: number, timeline: Record<string, any>) {\n  return client.post(`/timeline/${projectId}`, { timeline }).then((r) => r.data);\n}\n\nexport async function startRender(projectId: number, options: { watermark?: boolean } = {}) {\n  return client.post(`/render/${projectId}`, { ...options }).then((r) => r.data);\n}\n\nexport async function getRenderStatus(jobId: string) {\n  return client.get(`/render/status/${jobId}`).then((r) => r.data);\n}\n\nexport async function healthCheck() {\n  return client.get(`/healthz`).then((r) => r.data);\n}\n\nexport default client;\n// compatibility alias for existing components (Exporter.tsx)\nexport const triggerRender = startRender;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,MAAM,WAAW,iEAAoC;AAE9C,MAAM,SAAS,qHAAK,CAAC,MAAM,CAAC;IACjC,SAAS;IACT,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAEO,eAAe,YAAY,SAAiB;IACjD,OAAO,OAAO,GAAG,CAAC,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;AAChE;AAEO,eAAe,aAAa,SAAiB,EAAE,QAA6B;IACjF,OAAO,OAAO,IAAI,CAAC,CAAC,UAAU,EAAE,WAAW,EAAE;QAAE;IAAS,GAAG,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;AAC/E;AAEO,eAAe,YAAY,SAAiB,EAAE,UAAmC,CAAC,CAAC;IACxF,OAAO,OAAO,IAAI,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE;QAAE,GAAG,OAAO;IAAC,GAAG,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;AAC/E;AAEO,eAAe,gBAAgB,KAAa;IACjD,OAAO,OAAO,GAAG,CAAC,CAAC,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;AACjE;AAEO,eAAe;IACpB,OAAO,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;AAClD;uCAEe;AAER,MAAM,gBAAgB","debugId":null}},
    {"offset": {"line": 1116, "column": 0}, "map": {"version":3,"sources":["file:///home/nick/ai-video-editor/frontend/src/components/Editor/Exporter.tsx"],"sourcesContent":["import React from \"react\";\nimport { triggerRender } from \"../../lib/api\";\n\ntype Props = {\n  projectId: number;\n  onQueued?: (jobId: string) => void;\n  watermark?: boolean;\n  setError?: (e: string | null) => void;\n  setToast?: (m: string | null) => void;\n};\n\nexport default function Exporter({ projectId, onQueued, watermark = true, setError, setToast }: Props) {\n  const handleExport = async () => {\n    try {\n      const payload = await triggerRender(projectId, { watermark });\n      if (payload?.job_id) {\n        onQueued?.(payload.job_id);\n        setToast?.(\"Render job queued\");\n      } else {\n        setError?.(\"No job id returned from render endpoint\");\n      }\n    } catch (err) {\n      setError?.((err as Error).message);\n    }\n  };\n\n  return (\n    <div>\n      <button className=\"px-3 py-2 border rounded\" onClick={handleExport}>Start Export</button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;;;;;;;AAUe,SAAS,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAS;IACnG,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,UAAU,MAAM,IAAA,gKAAa,EAAC,WAAW;gBAAE;YAAU;YAC3D,IAAI,SAAS,QAAQ;gBACnB,WAAW,QAAQ,MAAM;gBACzB,WAAW;YACb,OAAO;gBACL,WAAW;YACb;QACF,EAAE,OAAO,KAAK;YACZ,WAAW,AAAC,IAAc,OAAO;QACnC;IACF;IAEA,qBACE,qKAAC;kBACC,cAAA,qKAAC;YAAO,WAAU;YAA2B,SAAS;sBAAc;;;;;;;;;;;AAG1E","debugId":null}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"sources":["file:///home/nick/ai-video-editor/frontend/src/stores/editorStore.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport type { ProjectDetail, RenderStatusPayload } from \"../types\";\n\ntype EditorState = {\n  project: ProjectDetail | null;\n  selectedSegmentIndex: number;\n  saving: boolean;\n  rendering: boolean;\n  jobId: string | null;\n  renderStatus: RenderStatusPayload | null;\n  toast: string | null;\n  error: string | null;\n  setProject: (p: ProjectDetail | null) => void;\n  setSelectedSegmentIndex: (i: number) => void;\n  setSaving: (v: boolean) => void;\n  setRendering: (v: boolean) => void;\n  setJobId: (id: string | null) => void;\n  setRenderStatus: (s: RenderStatusPayload | null) => void;\n  setToast: (t: string | null) => void;\n  setError: (e: string | null) => void;\n};\n\nexport const useEditorStore = create<EditorState>((set) => ({\n  project: null,\n  selectedSegmentIndex: 0,\n  saving: false,\n  rendering: false,\n  jobId: null,\n  renderStatus: null,\n  toast: null,\n  error: null,\n  setProject: (p) => set(() => ({ project: p })),\n  setSelectedSegmentIndex: (i) => set(() => ({ selectedSegmentIndex: i })),\n  setSaving: (v) => set(() => ({ saving: v })),\n  setRendering: (v) => set(() => ({ rendering: v })),\n  setJobId: (id) => set(() => ({ jobId: id })),\n  setRenderStatus: (s) => set(() => ({ renderStatus: s })),\n  setToast: (t) => set(() => ({ toast: t })),\n  setError: (e) => set(() => ({ error: e })),\n}));"],"names":[],"mappings":";;;;AAAA;;;;;;AAsBO,MAAM,iBAAiB,IAAA,wHAAM,EAAc,CAAC,MAAQ,CAAC;QAC1D,SAAS;QACT,sBAAsB;QACtB,QAAQ;QACR,WAAW;QACX,OAAO;QACP,cAAc;QACd,OAAO;QACP,OAAO;QACP,YAAY,CAAC,IAAM,IAAI,IAAM,CAAC;oBAAE,SAAS;gBAAE,CAAC;QAC5C,yBAAyB,CAAC,IAAM,IAAI,IAAM,CAAC;oBAAE,sBAAsB;gBAAE,CAAC;QACtE,WAAW,CAAC,IAAM,IAAI,IAAM,CAAC;oBAAE,QAAQ;gBAAE,CAAC;QAC1C,cAAc,CAAC,IAAM,IAAI,IAAM,CAAC;oBAAE,WAAW;gBAAE,CAAC;QAChD,UAAU,CAAC,KAAO,IAAI,IAAM,CAAC;oBAAE,OAAO;gBAAG,CAAC;QAC1C,iBAAiB,CAAC,IAAM,IAAI,IAAM,CAAC;oBAAE,cAAc;gBAAE,CAAC;QACtD,UAAU,CAAC,IAAM,IAAI,IAAM,CAAC;oBAAE,OAAO;gBAAE,CAAC;QACxC,UAAU,CAAC,IAAM,IAAI,IAAM,CAAC;oBAAE,OAAO;gBAAE,CAAC;IAC1C,CAAC","debugId":null}},
    {"offset": {"line": 1228, "column": 0}, "map": {"version":3,"sources":["file:///home/nick/ai-video-editor/frontend/src/pages/editor.tsx"],"sourcesContent":["import { ChangeEvent, useCallback, useEffect, useMemo, useState } from \"react\";\nimport type { NextPage } from \"next\";\nimport { useRouter } from \"next/router\";\nimport type { CaptionSegment, TimelineSegment } from \"../types\";\n\nimport { ChatDrawer } from \"../components/ChatDrawer\";\nimport { ModelSelect, type ModelSettings } from \"../components/ModelSelect\";\nimport { SettingsModal } from \"../components/SettingsModal\";\nimport { ToolsPanel } from \"../components/ToolsPanel\";\nimport VideoPreview from \"../components/Editor/VideoPreview\";\nimport Timeline from \"../components/Editor/Timeline\";\nimport EffectsPanel from \"../components/Editor/EffectsPanel\";\nimport Exporter from \"../components/Editor/Exporter\";\nimport { useEditorStore } from \"../stores/editorStore\";\nimport * as api from \"../lib/api\";\n\nconst API_BASE = process.env.NEXT_PUBLIC_API_BASE ?? \"http://localhost:8000/api\";\n\nexport default function Editor() {\n  const router = useRouter();\n  const { projectId } = router.query;\n\n  const {\n    project,\n    selectedSegmentIndex,\n    saving,\n    rendering,\n    jobId,\n    renderStatus,\n    toast,\n    error,\n    setProject,\n    setSelectedSegmentIndex,\n    setSaving,\n    setRendering,\n    setJobId,\n    setRenderStatus,\n    setToast,\n    setError,\n  } = useEditorStore();\n\n  const [toolsPanelOpen, setToolsPanelOpen] = useState(false);\n  const [chatOpen, setChatOpen] = useState(false);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [modelSettings, setModelSettings] = useState<ModelSettings>({\n    whisperModel: \"small.en\",\n    chatBackend: \"stub\",\n    hfModel: \"distilgpt2\",\n  });\n  const [uploadingFile, setUploadingFile] = useState(false);\n  const [watermarkEnabled, setWatermarkEnabled] = useState(true);\n  const [redisHealthy, setRedisHealthy] = useState(false);\n\n  // Load project on mount if projectId is provided\n  useEffect(() => {\n    const loadProjectData = async (id: number) => {\n      try {\n        const proj = await api.loadProject(id);\n        setProject(proj);\n      } catch (err) {\n        setError((err as Error).message);\n      }\n    };\n\n    if (projectId && typeof projectId === \"string\") {\n      loadProjectData(parseInt(projectId, 10));\n    }\n  }, [projectId, setProject, setError]);\n\n  // Check Redis health on mount\n  useEffect(() => {\n    const checkHealth = async () => {\n      try {\n        const health = await api.healthCheck();\n        setRedisHealthy(health.redis === true);\n      } catch {\n        setRedisHealthy(false);\n      }\n    };\n    checkHealth();\n  }, []);\n\n  // Poll render status when rendering\n  useEffect(() => {\n    if (!rendering || !jobId) return;\n\n    const interval = setInterval(async () => {\n      try {\n        const status = await api.getRenderStatus(jobId);\n        setRenderStatus(status);\n\n        if (status.status === \"finished\") {\n          setRendering(false);\n          setToast(\"Render complete!\");\n          if (status.output_url) {\n            setToast(`Render complete! Download: ${status.output_url}`);\n          }\n        } else if (status.status === \"failed\") {\n          setRendering(false);\n          setError(status.error || \"Render failed\");\n        }\n      } catch (err) {\n        setError((err as Error).message);\n        setRendering(false);\n      }\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [rendering, jobId, setRenderStatus, setRendering, setToast, setError]);\n\n  const loadProject = async (id: number) => {\n    try {\n      const proj = await api.loadProject(id);\n      setProject(proj);\n    } catch (err) {\n      setError((err as Error).message);\n    }\n  };\n\n  const handleFileUpload = async (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    setUploadingFile(true);\n    setError(null);\n\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"title\", file.name);\n      formData.append(\"auto_analyze\", \"true\");\n\n      const response = await fetch(`${API_BASE}/ingest`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      const newProjectId = result.project?.id;\n\n      if (newProjectId) {\n        setToast(\"Video uploaded successfully!\");\n        // Reload the project\n        await loadProject(newProjectId);\n        // Update URL\n        router.push(`/editor?projectId=${newProjectId}`, undefined, { shallow: true });\n      }\n    } catch (err) {\n      setError((err as Error).message);\n    } finally {\n      setUploadingFile(false);\n    }\n  };\n\n  const handleSaveTimeline = async () => {\n    if (!project) return;\n\n    setSaving(true);\n    setError(null);\n\n    try {\n      await api.saveTimeline(project.id, project.timeline);\n      setToast(\"Timeline saved!\");\n    } catch (err) {\n      setError((err as Error).message);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleEffectsChange = (effectsStr: string) => {\n    if (!project) return;\n\n    const effects = effectsStr.split(\",\").map((e) => e.trim()).filter(Boolean);\n    const updatedSegments = [...project.timeline.segments];\n    updatedSegments[selectedSegmentIndex] = {\n      ...updatedSegments[selectedSegmentIndex],\n      effects,\n    };\n\n    setProject({\n      ...project,\n      timeline: {\n        ...project.timeline,\n        segments: updatedSegments,\n      },\n    });\n  };\n\n  const handleRenderQueued = (newJobId: string) => {\n    setJobId(newJobId);\n    setRendering(true);\n  };\n\n  const handleToolApply = (tool: string, result: any) => {\n    if (!project) return;\n\n    // Apply tool results to the timeline\n    if (tool === \"transcribe\" && result.captions) {\n      setProject({\n        ...project,\n        timeline: {\n          ...project.timeline,\n          captions: result.captions,\n        },\n      });\n      setToast(\"Captions applied to timeline\");\n    } else if (tool === \"beats\" && result.beats) {\n      setProject({\n        ...project,\n        timeline: {\n          ...project.timeline,\n          beats: result.beats,\n          tempo: result.tempo || project.timeline.tempo,\n        },\n      });\n      setToast(\"Beats applied to timeline\");\n    }\n\n    setToolsPanelOpen(false);\n  };\n\n  const selectedSegment = project?.timeline.segments[selectedSegmentIndex];\n  const videoUrl = project?.asset?.ingest_url;\n\n  return (\n    <div className=\"min-h-screen bg-slate-900 text-slate-50\">\n      {/* Header */}\n      <header className=\"bg-slate-950 border-b border-slate-800 px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-2xl font-bold\">AI Video Editor</h1>\n          <div className=\"flex items-center gap-3\">\n            <button\n              onClick={() => setSettingsOpen(true)}\n              className=\"px-3 py-2 border border-slate-700 rounded hover:border-slate-600\"\n            >\n              Settings\n            </button>\n            <button\n              onClick={() => setChatOpen(true)}\n              className=\"px-3 py-2 border border-slate-700 rounded hover:border-slate-600\"\n            >\n              Chat\n            </button>\n            <button\n              onClick={() => setToolsPanelOpen(true)}\n              className=\"px-3 py-2 bg-emerald-600 rounded hover:bg-emerald-700\"\n            >\n              AI Tools\n            </button>\n          </div>\n        </div>\n        {project && (\n          <div className=\"mt-2 text-sm text-slate-400\">\n            Project: {project.title} (ID: {project.id})\n          </div>\n        )}\n      </header>\n\n      {/* Toast notifications */}\n      {toast && (\n        <div className=\"fixed top-20 right-6 bg-emerald-600 text-white px-4 py-3 rounded shadow-lg z-50\">\n          {toast}\n          <button onClick={() => setToast(null)} className=\"ml-4 text-white/80 hover:text-white\">\n            ✕\n          </button>\n        </div>\n      )}\n\n      {/* Error notifications */}\n      {error && (\n        <div className=\"fixed top-20 right-6 bg-red-600 text-white px-4 py-3 rounded shadow-lg z-50\">\n          {error}\n          <button onClick={() => setError(null)} className=\"ml-4 text-white/80 hover:text-white\">\n            ✕\n          </button>\n        </div>\n      )}\n\n      {/* Main content */}\n      <main className=\"p-6\">\n        {!project ? (\n          <div className=\"max-w-2xl mx-auto\">\n            <div className=\"bg-slate-800 border-2 border-dashed border-slate-700 rounded-lg p-12 text-center\">\n              <h2 className=\"text-xl font-semibold mb-4\">Upload a Video to Get Started</h2>\n              <p className=\"text-slate-400 mb-6\">\n                Upload a video file to begin editing. AI will automatically analyze it for transcription and beats.\n              </p>\n              <label className=\"inline-block\">\n                <input\n                  type=\"file\"\n                  accept=\"video/*\"\n                  onChange={handleFileUpload}\n                  disabled={uploadingFile}\n                  className=\"hidden\"\n                />\n                <span className=\"px-6 py-3 bg-emerald-600 rounded hover:bg-emerald-700 cursor-pointer inline-block\">\n                  {uploadingFile ? \"Uploading...\" : \"Choose Video File\"}\n                </span>\n              </label>\n            </div>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Left column - Video preview */}\n            <div className=\"lg:col-span-2 space-y-4\">\n              <VideoPreview videoSrc={videoUrl} />\n\n              {/* Timeline */}\n              {project.timeline.segments.length > 0 && (\n                <Timeline\n                  segments={project.timeline.segments}\n                  selectedIndex={selectedSegmentIndex}\n                  onSelect={setSelectedSegmentIndex}\n                />\n              )}\n\n              {/* Action buttons */}\n              <div className=\"flex gap-3\">\n                <button\n                  onClick={handleSaveTimeline}\n                  disabled={saving}\n                  className=\"px-4 py-2 bg-blue-600 rounded hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {saving ? \"Saving...\" : \"Save Timeline\"}\n                </button>\n                {project && (\n                  <Exporter\n                    projectId={project.id}\n                    onQueued={handleRenderQueued}\n                    watermark={watermarkEnabled}\n                    setError={setError}\n                    setToast={setToast}\n                  />\n                )}\n                {rendering && renderStatus && (\n                  <div className=\"px-4 py-2 bg-slate-800 rounded\">\n                    Rendering: {Math.round(renderStatus.progress * 100)}%\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Right column - Segment details */}\n            <div className=\"space-y-4\">\n              {selectedSegment && (\n                <>\n                  <div className=\"bg-slate-800 border border-slate-700 rounded p-4\">\n                    <h3 className=\"text-lg font-semibold mb-2\">Segment: {selectedSegment.name}</h3>\n                    <p className=\"text-sm text-slate-400\">\n                      {selectedSegment.start.toFixed(2)}s - {selectedSegment.end.toFixed(2)}s\n                    </p>\n                  </div>\n\n                  <EffectsPanel\n                    effects={selectedSegment.effects}\n                    onChange={handleEffectsChange}\n                  />\n\n                  {selectedSegment.captions.length > 0 && (\n                    <div className=\"bg-slate-800 border border-slate-700 rounded p-4\">\n                      <h4 className=\"text-sm font-semibold mb-2\">Captions</h4>\n                      <ul className=\"text-xs space-y-1\">\n                        {selectedSegment.captions.map((cap, i) => (\n                          <li key={i} className=\"text-slate-400\">\n                            [{cap.start.toFixed(1)}s] {cap.text}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n                </>\n              )}\n\n              {/* Project info */}\n              <div className=\"bg-slate-800 border border-slate-700 rounded p-4\">\n                <h4 className=\"text-sm font-semibold mb-2\">Project Info</h4>\n                <dl className=\"text-xs space-y-1\">\n                  <div className=\"flex justify-between\">\n                    <dt className=\"text-slate-400\">Status:</dt>\n                    <dd>{project.status}</dd>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <dt className=\"text-slate-400\">Segments:</dt>\n                    <dd>{project.timeline.segments.length}</dd>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <dt className=\"text-slate-400\">Tempo:</dt>\n                    <dd>{project.timeline.tempo.toFixed(1)} BPM</dd>\n                  </div>\n                </dl>\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n\n      {/* Modals & Panels */}\n      <ToolsPanel\n        open={toolsPanelOpen}\n        apiBase={API_BASE}\n        assetPath={project?.asset?.path}\n        onClose={() => setToolsPanelOpen(false)}\n        onApply={handleToolApply}\n        modelSettings={modelSettings}\n      />\n\n      <ChatDrawer\n        open={chatOpen}\n        onClose={() => setChatOpen(false)}\n        apiBase={API_BASE}\n        modelSettings={modelSettings}\n      />\n\n      <SettingsModal\n        open={settingsOpen}\n        watermarkEnabled={watermarkEnabled}\n        onWatermarkChange={setWatermarkEnabled}\n        consent={project?.consent}\n        redisHealthy={redisHealthy}\n        onClose={() => setSettingsOpen(false)}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAEA,MAAM,WAAW,iEAAoC;AAEtC,SAAS;IACtB,MAAM,SAAS,IAAA,yKAAS;IACxB,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,KAAK;IAElC,MAAM,EACJ,OAAO,EACP,oBAAoB,EACpB,MAAM,EACN,SAAS,EACT,KAAK,EACL,YAAY,EACZ,KAAK,EACL,KAAK,EACL,UAAU,EACV,uBAAuB,EACvB,SAAS,EACT,YAAY,EACZ,QAAQ,EACR,eAAe,EACf,QAAQ,EACR,QAAQ,EACT,GAAG,IAAA,4KAAc;IAElB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,+GAAQ,EAAC;IACrD,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,+GAAQ,EAAC;IACzC,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,+GAAQ,EAAC;IACjD,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,+GAAQ,EAAgB;QAChE,cAAc;QACd,aAAa;QACb,SAAS;IACX;IACA,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,+GAAQ,EAAC;IACnD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,+GAAQ,EAAC;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,+GAAQ,EAAC;IAEjD,iDAAiD;IACjD,IAAA,gHAAS,EAAC;QACR,MAAM,kBAAkB,OAAO;YAC7B,IAAI;gBACF,MAAM,OAAO,MAAM,8JAAe,CAAC;gBACnC,WAAW;YACb,EAAE,OAAO,KAAK;gBACZ,SAAS,AAAC,IAAc,OAAO;YACjC;QACF;QAEA,IAAI,aAAa,OAAO,cAAc,UAAU;YAC9C,gBAAgB,SAAS,WAAW;QACtC;IACF,GAAG;QAAC;QAAW;QAAY;KAAS;IAEpC,8BAA8B;IAC9B,IAAA,gHAAS,EAAC;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,SAAS,MAAM,8JAAe;gBACpC,gBAAgB,OAAO,KAAK,KAAK;YACnC,EAAE,OAAM;gBACN,gBAAgB;YAClB;QACF;QACA;IACF,GAAG,EAAE;IAEL,oCAAoC;IACpC,IAAA,gHAAS,EAAC;QACR,IAAI,CAAC,aAAa,CAAC,OAAO;QAE1B,MAAM,WAAW,YAAY;YAC3B,IAAI;gBACF,MAAM,SAAS,MAAM,kKAAmB,CAAC;gBACzC,gBAAgB;gBAEhB,IAAI,OAAO,MAAM,KAAK,YAAY;oBAChC,aAAa;oBACb,SAAS;oBACT,IAAI,OAAO,UAAU,EAAE;wBACrB,SAAS,CAAC,2BAA2B,EAAE,OAAO,UAAU,EAAE;oBAC5D;gBACF,OAAO,IAAI,OAAO,MAAM,KAAK,UAAU;oBACrC,aAAa;oBACb,SAAS,OAAO,KAAK,IAAI;gBAC3B;YACF,EAAE,OAAO,KAAK;gBACZ,SAAS,AAAC,IAAc,OAAO;gBAC/B,aAAa;YACf;QACF,GAAG;QAEH,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;QAAW;QAAO;QAAiB;QAAc;QAAU;KAAS;IAExE,MAAM,cAAc,OAAO;QACzB,IAAI;YACF,MAAM,OAAO,MAAM,8JAAe,CAAC;YACnC,WAAW;QACb,EAAE,OAAO,KAAK;YACZ,SAAS,AAAC,IAAc,OAAO;QACjC;IACF;IAEA,MAAM,mBAAmB,OAAO;QAC9B,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAChC,IAAI,CAAC,MAAM;QAEX,iBAAiB;QACjB,SAAS;QAET,IAAI;YACF,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,QAAQ;YACxB,SAAS,MAAM,CAAC,SAAS,KAAK,IAAI;YAClC,SAAS,MAAM,CAAC,gBAAgB;YAEhC,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,OAAO,CAAC,EAAE;gBACjD,QAAQ;gBACR,MAAM;YACR;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,eAAe,EAAE,SAAS,UAAU,EAAE;YACzD;YAEA,MAAM,SAAS,MAAM,SAAS,IAAI;YAClC,MAAM,eAAe,OAAO,OAAO,EAAE;YAErC,IAAI,cAAc;gBAChB,SAAS;gBACT,qBAAqB;gBACrB,MAAM,YAAY;gBAClB,aAAa;gBACb,OAAO,IAAI,CAAC,CAAC,kBAAkB,EAAE,cAAc,EAAE,WAAW;oBAAE,SAAS;gBAAK;YAC9E;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,AAAC,IAAc,OAAO;QACjC,SAAU;YACR,iBAAiB;QACnB;IACF;IAEA,MAAM,qBAAqB;QACzB,IAAI,CAAC,SAAS;QAEd,UAAU;QACV,SAAS;QAET,IAAI;YACF,MAAM,+JAAgB,CAAC,QAAQ,EAAE,EAAE,QAAQ,QAAQ;YACnD,SAAS;QACX,EAAE,OAAO,KAAK;YACZ,SAAS,AAAC,IAAc,OAAO;QACjC,SAAU;YACR,UAAU;QACZ;IACF;IAEA,MAAM,sBAAsB,CAAC;QAC3B,IAAI,CAAC,SAAS;QAEd,MAAM,UAAU,WAAW,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,IAAI,MAAM,CAAC;QAClE,MAAM,kBAAkB;eAAI,QAAQ,QAAQ,CAAC,QAAQ;SAAC;QACtD,eAAe,CAAC,qBAAqB,GAAG;YACtC,GAAG,eAAe,CAAC,qBAAqB;YACxC;QACF;QAEA,WAAW;YACT,GAAG,OAAO;YACV,UAAU;gBACR,GAAG,QAAQ,QAAQ;gBACnB,UAAU;YACZ;QACF;IACF;IAEA,MAAM,qBAAqB,CAAC;QAC1B,SAAS;QACT,aAAa;IACf;IAEA,MAAM,kBAAkB,CAAC,MAAc;QACrC,IAAI,CAAC,SAAS;QAEd,qCAAqC;QACrC,IAAI,SAAS,gBAAgB,OAAO,QAAQ,EAAE;YAC5C,WAAW;gBACT,GAAG,OAAO;gBACV,UAAU;oBACR,GAAG,QAAQ,QAAQ;oBACnB,UAAU,OAAO,QAAQ;gBAC3B;YACF;YACA,SAAS;QACX,OAAO,IAAI,SAAS,WAAW,OAAO,KAAK,EAAE;YAC3C,WAAW;gBACT,GAAG,OAAO;gBACV,UAAU;oBACR,GAAG,QAAQ,QAAQ;oBACnB,OAAO,OAAO,KAAK;oBACnB,OAAO,OAAO,KAAK,IAAI,QAAQ,QAAQ,CAAC,KAAK;gBAC/C;YACF;YACA,SAAS;QACX;QAEA,kBAAkB;IACpB;IAEA,MAAM,kBAAkB,SAAS,SAAS,QAAQ,CAAC,qBAAqB;IACxE,MAAM,WAAW,SAAS,OAAO;IAEjC,qBACE,qKAAC;QAAI,WAAU;;0BAEb,qKAAC;gBAAO,WAAU;;kCAChB,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAG,WAAU;0CAAqB;;;;;;0CACnC,qKAAC;gCAAI,WAAU;;kDACb,qKAAC;wCACC,SAAS,IAAM,gBAAgB;wCAC/B,WAAU;kDACX;;;;;;kDAGD,qKAAC;wCACC,SAAS,IAAM,YAAY;wCAC3B,WAAU;kDACX;;;;;;kDAGD,qKAAC;wCACC,SAAS,IAAM,kBAAkB;wCACjC,WAAU;kDACX;;;;;;;;;;;;;;;;;;oBAKJ,yBACC,qKAAC;wBAAI,WAAU;;4BAA8B;4BACjC,QAAQ,KAAK;4BAAC;4BAAO,QAAQ,EAAE;4BAAC;;;;;;;;;;;;;YAM/C,uBACC,qKAAC;gBAAI,WAAU;;oBACZ;kCACD,qKAAC;wBAAO,SAAS,IAAM,SAAS;wBAAO,WAAU;kCAAsC;;;;;;;;;;;;YAO1F,uBACC,qKAAC;gBAAI,WAAU;;oBACZ;kCACD,qKAAC;wBAAO,SAAS,IAAM,SAAS;wBAAO,WAAU;kCAAsC;;;;;;;;;;;;0BAO3F,qKAAC;gBAAK,WAAU;0BACb,CAAC,wBACA,qKAAC;oBAAI,WAAU;8BACb,cAAA,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,qKAAC;gCAAE,WAAU;0CAAsB;;;;;;0CAGnC,qKAAC;gCAAM,WAAU;;kDACf,qKAAC;wCACC,MAAK;wCACL,QAAO;wCACP,UAAU;wCACV,UAAU;wCACV,WAAU;;;;;;kDAEZ,qKAAC;wCAAK,WAAU;kDACb,gBAAgB,iBAAiB;;;;;;;;;;;;;;;;;;;;;;yCAM1C,qKAAC;oBAAI,WAAU;;sCAEb,qKAAC;4BAAI,WAAU;;8CACb,qKAAC,qLAAY;oCAAC,UAAU;;;;;;gCAGvB,QAAQ,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,mBAClC,qKAAC,iLAAQ;oCACP,UAAU,QAAQ,QAAQ,CAAC,QAAQ;oCACnC,eAAe;oCACf,UAAU;;;;;;8CAKd,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CACC,SAAS;4CACT,UAAU;4CACV,WAAU;sDAET,SAAS,cAAc;;;;;;wCAEzB,yBACC,qKAAC,iLAAQ;4CACP,WAAW,QAAQ,EAAE;4CACrB,UAAU;4CACV,WAAW;4CACX,UAAU;4CACV,UAAU;;;;;;wCAGb,aAAa,8BACZ,qKAAC;4CAAI,WAAU;;gDAAiC;gDAClC,KAAK,KAAK,CAAC,aAAa,QAAQ,GAAG;gDAAK;;;;;;;;;;;;;;;;;;;sCAO5D,qKAAC;4BAAI,WAAU;;gCACZ,iCACC;;sDACE,qKAAC;4CAAI,WAAU;;8DACb,qKAAC;oDAAG,WAAU;;wDAA6B;wDAAU,gBAAgB,IAAI;;;;;;;8DACzE,qKAAC;oDAAE,WAAU;;wDACV,gBAAgB,KAAK,CAAC,OAAO,CAAC;wDAAG;wDAAK,gBAAgB,GAAG,CAAC,OAAO,CAAC;wDAAG;;;;;;;;;;;;;sDAI1E,qKAAC,qLAAY;4CACX,SAAS,gBAAgB,OAAO;4CAChC,UAAU;;;;;;wCAGX,gBAAgB,QAAQ,CAAC,MAAM,GAAG,mBACjC,qKAAC;4CAAI,WAAU;;8DACb,qKAAC;oDAAG,WAAU;8DAA6B;;;;;;8DAC3C,qKAAC;oDAAG,WAAU;8DACX,gBAAgB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,kBAClC,qKAAC;4DAAW,WAAU;;gEAAiB;gEACnC,IAAI,KAAK,CAAC,OAAO,CAAC;gEAAG;gEAAI,IAAI,IAAI;;2DAD5B;;;;;;;;;;;;;;;;;;8CAWrB,qKAAC;oCAAI,WAAU;;sDACb,qKAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,qKAAC;4CAAG,WAAU;;8DACZ,qKAAC;oDAAI,WAAU;;sEACb,qKAAC;4DAAG,WAAU;sEAAiB;;;;;;sEAC/B,qKAAC;sEAAI,QAAQ,MAAM;;;;;;;;;;;;8DAErB,qKAAC;oDAAI,WAAU;;sEACb,qKAAC;4DAAG,WAAU;sEAAiB;;;;;;sEAC/B,qKAAC;sEAAI,QAAQ,QAAQ,CAAC,QAAQ,CAAC,MAAM;;;;;;;;;;;;8DAEvC,qKAAC;oDAAI,WAAU;;sEACb,qKAAC;4DAAG,WAAU;sEAAiB;;;;;;sEAC/B,qKAAC;;gEAAI,QAAQ,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;gEAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUrD,qKAAC,4KAAU;gBACT,MAAM;gBACN,SAAS;gBACT,WAAW,SAAS,OAAO;gBAC3B,SAAS,IAAM,kBAAkB;gBACjC,SAAS;gBACT,eAAe;;;;;;0BAGjB,qKAAC,4KAAU;gBACT,MAAM;gBACN,SAAS,IAAM,YAAY;gBAC3B,SAAS;gBACT,eAAe;;;;;;0BAGjB,qKAAC,kLAAa;gBACZ,MAAM;gBACN,kBAAkB;gBAClB,mBAAmB;gBACnB,SAAS,SAAS;gBAClB,cAAc;gBACd,SAAS,IAAM,gBAAgB;;;;;;;;;;;;AAIvC","debugId":null}}]
}